# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python3 -m pip install coverage
        pip install pytest-cov
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Doctest
      env:
          LOBBYVIEW_TOKEN: ${{ secrets.LOBBYVIEW_TOKEN }}
      run: |
        coverage run tests/doctests.py
        coverage report -m
        coverage xml

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml

    - name: Extract coverage percentage
      if: matrix.python-version == '3.11' && runner.os == 'macOS'
      id: coverage
      run: |
        COVERAGE=$(grep 'line-rate' coverage.xml | sed -E 's/.*line-rate="([0-9]+\.[0-9]+)".*/\1/')
        COVERAGE=$(echo "$COVERAGE * 100" | bc)
        if [[ "$COVERAGE" == .* ]]; then
          COVERAGE="0$COVERAGE"
        fi
        COVERAGE=$(printf "%.2f" "$COVERAGE")
        echo "Coverage: $COVERAGE"
        echo "::set-output name=coverage::$COVERAGE"

    - name: Create Coverage Badge
      if: matrix.python-version == '3.11' && runner.os == 'macOS'
      run: |
        curl -o coverage-badge.svg "https://img.shields.io/badge/coverage-${{ steps.coverage.outputs.coverage }}%25-brightgreen"
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git fetch origin
        git checkout main || git checkout -b main
        git pull origin main
        git add coverage-badge.svg
        git commit -m "Add coverage badge"
        git push origin main

    # - name: Pytest
    #   env:
    #       LOBBYVIEW_TOKEN: ${{ secrets.LOBBYVIEW_TOKEN }}
    #   run: |
    #     coverage run -m pytest
    #     coverage report -m

    # - name: Run tests and generate coverage report
    #   env:
    #         LOBBYVIEW_TOKEN: ${{ secrets.LOBBYVIEW_TOKEN }}
    #   run: |
    #     pytest --cov=./src --cov-report=html --doctest-modules
    
    # - name: Upload coverage report
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: coverage-report
    #     path: htmlcov/
